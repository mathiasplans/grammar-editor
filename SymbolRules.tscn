[gd_scene load_steps=5 format=3 uid="uid://ch1p7ghl03qlr"]

[ext_resource type="PackedScene" uid="uid://bwxn2fgngxsns" path="res://RuleSelector.tscn" id="1_vi045"]
[ext_resource type="Texture2D" uid="uid://b0uv4j3fvmpdl" path="res://textures/right-arrow-white.svg" id="2_adgno"]

[sub_resource type="GDScript" id="GDScript_ryr5i"]
resource_name = "SymbolRules"
script/source = "extends MarginContainer

signal rule_created(symbol, index)
signal rule_selected(symbol, index)
signal rule_deleted(symbol, index)

signal symbol_renamed(symbol, new_text)
signal symbol_selected(symbol)
signal symbol_deleted(symbol)

var symbol
var rules = {}

# Persistant:
# * symbol
# * rules

@onready var new_rule = $Flow/NewRuleContainer/NewRule

# Called when the node enters the scene tree for the first time.
func _ready():
	self.new_rule.rule_created.connect(_on_rule_create)
	self.new_rule.rule_selected.connect(_on_rule_select)
	self.new_rule.rule_deleted.connect(_on_rule_delete)
	
	# Set the default name
	$Flow/SymbolContainer.rename(symbol.text)
	
	$Flow/SymbolContainer.retexted.connect(_on_symbol_rename)
	$Flow/SymbolContainer.selected.connect(_on_symbol_select)
	$Flow/SymbolContainer.deleted.connect(_on_symbol_delete)
	
	$Flow/SymbolContainer.always_display_name = true
	$Flow/SymbolContainer.set_viewbutton_visibility()

func _on_rule_create(index, object):
	self.rules[index] = object
	self.rule_created.emit(self.symbol, index)
	
func _on_rule_select(index):
	self.rule_selected.emit(self.symbol, index)
	
func _on_rule_delete(index):
	self.rule_deleted.emit(self.symbol, index)
	self.rules.erase(index)
	
func _on_symbol_rename(_index, new_text):
	self.symbol_renamed.emit(self.symbol, new_text)
	
func _on_symbol_select(_index):
	self.symbol_selected.emit(self.symbol)
	
func _on_symbol_delete(_index):
	# Free all the children
	for key in self.rules.keys():
		var rule = self.rules[key]
		rule.delete()
	
	self.symbol_deleted.emit(self.symbol)
	
	self.queue_free()
	
func display_meshes(index, meshes):
	var container = self.rules[index]
	container.display_meshes(meshes)
	
func display_symbol_meshes(meshes):
	$Flow/SymbolContainer.display_meshes(meshes)
"

[sub_resource type="GDScript" id="GDScript_1rxvp"]
resource_name = "NewRule"
script/source = "extends Button
signal rule_created(index, symbol)
signal rule_selected(index)
signal rule_deleted(index)

@onready var rulesel_scene = preload(\"res://RuleSelector.tscn\")

var rule_index_counter = 0

@onready var flow = $\"../..\"

# Persistant:
# * rule_index_counter

func _pressed():
	self.create_rule()
	
func create_rule():
	var instance = rulesel_scene.instantiate()
	instance.index = self.rule_index_counter
	self.rule_index_counter += 1
	
	self.rule_created.emit(instance.index, instance)
	
	self.flow.add_child(instance)

	var instance_i = instance.get_index()
	self.flow.move_child(instance, instance_i - 1)
	
	# Connect signals
	instance.selected.connect(_on_rule_selected)
	instance.deleted.connect(_on_rule_deleted)
	
	instance.rename(\"R%d\" % instance.index)

func _on_rule_selected(index):
	self.rule_selected.emit(index)
	
func _on_rule_deleted(index):
	self.rule_deleted.emit(index)
"

[node name="RuleSelectors" type="MarginContainer"]
offset_right = 281.0
offset_bottom = 70.0
size_flags_horizontal = 3
size_flags_vertical = 0
theme_override_constants/margin_left = 3
theme_override_constants/margin_top = 3
theme_override_constants/margin_right = 3
script = SubResource("GDScript_ryr5i")

[node name="Flow" type="HFlowContainer" parent="."]
layout_mode = 2

[node name="SymbolContainer" parent="Flow" instance=ExtResource("1_vi045")]
layout_mode = 2

[node name="TextureRect" type="TextureRect" parent="Flow"]
layout_mode = 2
texture = ExtResource("2_adgno")
expand_mode = 2
stretch_mode = 5

[node name="NewRuleContainer" type="MarginContainer" parent="Flow"]
custom_minimum_size = Vector2(70, 40)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 4
theme_override_constants/margin_left = 20

[node name="NewRule" type="Button" parent="Flow/NewRuleContainer"]
layout_mode = 2
text = "New Rule"
script = SubResource("GDScript_1rxvp")
